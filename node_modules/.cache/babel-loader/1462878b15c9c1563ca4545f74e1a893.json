{"ast":null,"code":"function getOperatingSystem(window) {\n  var operatingSystem = 'Not known';\n\n  if (window.navigator.appVersion.indexOf('Win') !== -1) {\n    operatingSystem = 'Windows OS';\n  }\n\n  if (window.navigator.appVersion.indexOf('Mac') !== -1) {\n    operatingSystem = 'MacOS';\n  }\n\n  if (window.navigator.appVersion.indexOf('X11') !== -1) {\n    operatingSystem = 'UNIX OS';\n  }\n\n  if (window.navigator.appVersion.indexOf('Linux') !== -1) {\n    operatingSystem = 'Linux OS';\n  }\n\n  return operatingSystem;\n}\n\nfunction getBrowser(window) {\n  var currentBrowser = 'Not known';\n\n  if (window.navigator.userAgent.indexOf('Chrome') !== -1) {\n    currentBrowser = 'Google Chrome';\n  } else if (window.navigator.userAgent.indexOf('Firefox') !== -1) {\n    currentBrowser = 'Mozilla Firefox';\n  } else if (window.navigator.userAgent.indexOf('MSIE') !== -1) {\n    currentBrowser = 'Internet Exployer';\n  } else if (window.navigator.userAgent.indexOf('Edge') !== -1) {\n    currentBrowser = 'Edge';\n  } else if (window.navigator.userAgent.indexOf('Safari') !== -1) {\n    currentBrowser = 'Safari';\n  } else if (window.navigator.userAgent.indexOf('Opera') !== -1) {\n    currentBrowser = 'Opera';\n  } else if (window.navigator.userAgent.indexOf('Opera') !== -1) {\n    currentBrowser = 'YaBrowser';\n  } else {\n    console.log('Others');\n  }\n\n  return currentBrowser;\n}\n\nexport var OS = function OS(window) {\n  return getOperatingSystem(window); // <-- missing return\n};\nexport var currentBrowser = function currentBrowser(window) {\n  return getBrowser(window); // <-- missing return\n};","map":{"version":3,"names":["getOperatingSystem","window","operatingSystem","navigator","appVersion","indexOf","getBrowser","currentBrowser","userAgent","console","log","OS"],"sources":["/home/enigmatix/React Projects/growtal-35169/frontend/src/utils/platform.js"],"sourcesContent":["function getOperatingSystem(window) {\n    let operatingSystem = 'Not known';\n    if (window.navigator.appVersion.indexOf('Win') !== -1) { operatingSystem = 'Windows OS'; }\n    if (window.navigator.appVersion.indexOf('Mac') !== -1) { operatingSystem = 'MacOS'; }\n    if (window.navigator.appVersion.indexOf('X11') !== -1) { operatingSystem = 'UNIX OS'; }\n    if (window.navigator.appVersion.indexOf('Linux') !== -1) { operatingSystem = 'Linux OS'; }\n\n    return operatingSystem;\n}\n\nfunction getBrowser(window) {\n    let currentBrowser = 'Not known';\n    if (window.navigator.userAgent.indexOf('Chrome') !== -1) { currentBrowser = 'Google Chrome'; }\n    else if (window.navigator.userAgent.indexOf('Firefox') !== -1) { currentBrowser = 'Mozilla Firefox'; }\n    else if (window.navigator.userAgent.indexOf('MSIE') !== -1) { currentBrowser = 'Internet Exployer'; }\n    else if (window.navigator.userAgent.indexOf('Edge') !== -1) { currentBrowser = 'Edge'; }\n    else if (window.navigator.userAgent.indexOf('Safari') !== -1) { currentBrowser = 'Safari'; }\n    else if (window.navigator.userAgent.indexOf('Opera') !== -1) { currentBrowser = 'Opera'; }\n    else if (window.navigator.userAgent.indexOf('Opera') !== -1) { currentBrowser = 'YaBrowser'; }\n    else { console.log('Others'); }\n\n    return currentBrowser;\n}\n\nexport const OS = (window) => {\n    return getOperatingSystem(window); // <-- missing return\n};\nexport const currentBrowser = (window) => {\n    return getBrowser(window); // <-- missing return\n};"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,MAA5B,EAAoC;EAChC,IAAIC,eAAe,GAAG,WAAtB;;EACA,IAAID,MAAM,CAACE,SAAP,CAAiBC,UAAjB,CAA4BC,OAA5B,CAAoC,KAApC,MAA+C,CAAC,CAApD,EAAuD;IAAEH,eAAe,GAAG,YAAlB;EAAiC;;EAC1F,IAAID,MAAM,CAACE,SAAP,CAAiBC,UAAjB,CAA4BC,OAA5B,CAAoC,KAApC,MAA+C,CAAC,CAApD,EAAuD;IAAEH,eAAe,GAAG,OAAlB;EAA4B;;EACrF,IAAID,MAAM,CAACE,SAAP,CAAiBC,UAAjB,CAA4BC,OAA5B,CAAoC,KAApC,MAA+C,CAAC,CAApD,EAAuD;IAAEH,eAAe,GAAG,SAAlB;EAA8B;;EACvF,IAAID,MAAM,CAACE,SAAP,CAAiBC,UAAjB,CAA4BC,OAA5B,CAAoC,OAApC,MAAiD,CAAC,CAAtD,EAAyD;IAAEH,eAAe,GAAG,UAAlB;EAA+B;;EAE1F,OAAOA,eAAP;AACH;;AAED,SAASI,UAAT,CAAoBL,MAApB,EAA4B;EACxB,IAAIM,cAAc,GAAG,WAArB;;EACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,QAAnC,MAAiD,CAAC,CAAtD,EAAyD;IAAEE,cAAc,GAAG,eAAjB;EAAmC,CAA9F,MACK,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAAvD,EAA0D;IAAEE,cAAc,GAAG,iBAAjB;EAAqC,CAAjG,MACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,MAAnC,MAA+C,CAAC,CAApD,EAAuD;IAAEE,cAAc,GAAG,mBAAjB;EAAuC,CAAhG,MACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,MAAnC,MAA+C,CAAC,CAApD,EAAuD;IAAEE,cAAc,GAAG,MAAjB;EAA0B,CAAnF,MACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,QAAnC,MAAiD,CAAC,CAAtD,EAAyD;IAAEE,cAAc,GAAG,QAAjB;EAA4B,CAAvF,MACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,OAAnC,MAAgD,CAAC,CAArD,EAAwD;IAAEE,cAAc,GAAG,OAAjB;EAA2B,CAArF,MACA,IAAIN,MAAM,CAACE,SAAP,CAAiBK,SAAjB,CAA2BH,OAA3B,CAAmC,OAAnC,MAAgD,CAAC,CAArD,EAAwD;IAAEE,cAAc,GAAG,WAAjB;EAA+B,CAAzF,MACA;IAAEE,OAAO,CAACC,GAAR,CAAY,QAAZ;EAAwB;;EAE/B,OAAOH,cAAP;AACH;;AAED,OAAO,IAAMI,EAAE,GAAG,SAALA,EAAK,CAACV,MAAD,EAAY;EAC1B,OAAOD,kBAAkB,CAACC,MAAD,CAAzB,CAD0B,CACS;AACtC,CAFM;AAGP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACN,MAAD,EAAY;EACtC,OAAOK,UAAU,CAACL,MAAD,CAAjB,CADsC,CACX;AAC9B,CAFM"},"metadata":{},"sourceType":"module"}