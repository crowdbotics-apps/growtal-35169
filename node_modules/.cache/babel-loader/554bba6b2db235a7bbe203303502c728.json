{"ast":null,"code":"import _defineProperty from \"/home/enigmatix/React Projects/growtal-35169/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/enigmatix/React Projects/growtal-35169/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/enigmatix/React Projects/growtal-35169/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from \"react\";\n/**\n * Determines a value if it's an object\n *\n * @param {object} value\n */\n\nvar isObject = function isObject(value) {\n  return value !== null && typeof value === \"object\";\n};\n/**\n * Returns true if the value is RegExp\n *\n * @param {RegExp} value\n */\n\n\nvar isRegExp = function isRegExp(value) {\n  return value instanceof RegExp;\n};\n/**\n * Custom hooks to validate your Form\n *\n * @param {object} stateSchema model you stateSchema.\n * @param {object} validationSchema model your validation.\n * @param {function} callback function to be execute during form submission.\n */\n\n\nvar useForm = function useForm() {\n  var stateSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var validationSchema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n  var _useState = useState(stateSchema),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      disable = _useState4[0],\n      setDisable = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDirty = _useState6[0],\n      setIsDirty = _useState6[1]; // Used to disable submit button if there's an error in state\n  // or the required field in state has no value.\n  // Wrapped in useCallback to cached the function to avoid intensive memory leaked\n  // in every re-render in component\n\n\n  var validateState = useCallback(function () {\n    var hasErrorInState = Object.keys(validationSchema).some(function (key) {\n      var isInputFieldRequired = validationSchema[key].required;\n      var stateValue = state[key].value; // state value\n\n      var stateError = state[key].error; // state error\n\n      return isInputFieldRequired && !stateValue || stateError;\n    });\n    return hasErrorInState;\n  }, [state, validationSchema]); // Disable button in inital render;\n\n  useEffect(function () {\n    setDisable(validateState());\n  }, []); // For every changed in our state this will be fired\n  // To be able to disable the button\n\n  useEffect(function () {\n    if (isDirty) {\n      setDisable(validateState());\n    }\n  }, [state, isDirty]); // Event handler for handling changes in input.\n  // eslint-disable-next-line\n\n  var handleOnChange = function handleOnChange(name, value) {\n    setIsDirty(true);\n    var error = \"\";\n\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"Field Rquired\";\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\");\n        } // Test your defined RegExp...\n\n\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          var validator = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = validator.error;\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          var _validator = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = _validator.error;\n        }\n      }\n    }\n\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, {\n        value: value,\n        error: error\n      }));\n    });\n  };\n\n  var handlePhoneNumberChange = function handlePhoneNumberChange(name, value, countryCode, countryDialCode) {\n    setIsDirty(true);\n    var error = \"\";\n\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"v8\";\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\");\n        } // Test your defined RegExp...\n\n\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          var validator = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = validator.error;\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          var _validator2 = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = _validator2.error;\n        }\n      }\n    }\n\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, {\n        value: value,\n        error: error,\n        countryCode: countryCode,\n        countryDialCode: countryDialCode\n      }));\n    });\n  };\n\n  var handleOnSubmit = function handleOnSubmit(name, value) {\n    setIsDirty(true);\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, {\n        value: value,\n        error: \"Field required\"\n      }));\n    });\n  };\n\n  var validateOnBlur = function validateOnBlur(name, value) {\n    var error = \"\";\n\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"v8\";\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\");\n        } // Test your defined RegExp...\n\n\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          var validator = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = validator.error;\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          var _validator3 = validationSchema[name].validator; // eslint-disable-next-line prefer-destructuring\n\n          error = _validator3.error;\n        }\n      }\n    }\n\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, {\n        value: value,\n        error: error\n      }));\n    });\n  };\n\n  return {\n    handleOnChange: handleOnChange,\n    handlePhoneNumberChange: handlePhoneNumberChange,\n    handleOnSubmit: handleOnSubmit,\n    validateOnBlur: validateOnBlur,\n    state: state,\n    setIsDirty: setIsDirty,\n    setState: setState,\n    disable: disable\n  };\n};\n\nexport default useForm;","map":{"version":3,"names":["React","useState","useEffect","useCallback","isObject","value","isRegExp","RegExp","useForm","stateSchema","validationSchema","callback","state","setState","disable","setDisable","isDirty","setIsDirty","validateState","hasErrorInState","Object","keys","some","key","isInputFieldRequired","required","stateValue","stateError","error","handleOnChange","name","validator","regEx","Error","test","compare","prevState","handlePhoneNumberChange","countryCode","countryDialCode","handleOnSubmit","validateOnBlur"],"sources":["/home/enigmatix/React Projects/growtal-35169/frontend/src/utils/useForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\n\n/**\n * Determines a value if it's an object\n *\n * @param {object} value\n */\nconst isObject = value => value !== null && typeof value === \"object\"\n\n/**\n * Returns true if the value is RegExp\n *\n * @param {RegExp} value\n */\nconst isRegExp = value => value instanceof RegExp\n\n/**\n * Custom hooks to validate your Form\n *\n * @param {object} stateSchema model you stateSchema.\n * @param {object} validationSchema model your validation.\n * @param {function} callback function to be execute during form submission.\n */\n\nconst useForm = (stateSchema = {}, validationSchema = {}, callback) => {\n  const [state, setState] = useState(stateSchema)\n  const [disable, setDisable] = useState(true)\n  const [isDirty, setIsDirty] = useState(false)\n\n  // Used to disable submit button if there's an error in state\n  // or the required field in state has no value.\n  // Wrapped in useCallback to cached the function to avoid intensive memory leaked\n  // in every re-render in component\n  const validateState = useCallback(() => {\n    const hasErrorInState = Object.keys(validationSchema).some(key => {\n      const isInputFieldRequired = validationSchema[key].required\n      const stateValue = state[key].value // state value\n      const stateError = state[key].error // state error\n\n      return (isInputFieldRequired && !stateValue) || stateError\n    })\n\n    return hasErrorInState\n  }, [state, validationSchema])\n\n  // Disable button in inital render;\n  useEffect(() => {\n    setDisable(validateState())\n  }, [])\n\n  // For every changed in our state this will be fired\n  // To be able to disable the button\n  useEffect(() => {\n    if (isDirty) {\n      setDisable(validateState())\n    }\n  }, [state, isDirty])\n\n  // Event handler for handling changes in input.\n  // eslint-disable-next-line\n  const handleOnChange = (name, value) => {\n    setIsDirty(true)\n\n    let error = \"\"\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"Field Rquired\"\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\")\n        }\n\n        // Test your defined RegExp...\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      }\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: { value, error }\n    }))\n  }\n\n  const handlePhoneNumberChange = (\n    name,\n    value,\n    countryCode,\n    countryDialCode\n  ) => {\n    setIsDirty(true)\n\n    let error = \"\"\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"v8\"\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\")\n        }\n\n        // Test your defined RegExp...\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      }\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: { value, error, countryCode, countryDialCode }\n    }))\n  }\n\n  const handleOnSubmit = (name, value) => {\n    setIsDirty(true)\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: { value, error: \"Field required\" }\n    }))\n  }\n\n  const validateOnBlur = (name, value) => {\n    let error = \"\"\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"v8\"\n      }\n    }\n\n    if (isObject(validationSchema[name].validator)) {\n      if (validationSchema[name].validator.regEx) {\n        if (!isRegExp(validationSchema[name].validator.regEx)) {\n          throw new Error(\"Your RegExp value isn't a valid RegExp Object\")\n        }\n\n        // Test your defined RegExp...\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      } else if (validationSchema[name].validator.compare) {\n        if (value && validationSchema[name].validator.compare(value)) {\n          const { validator } = validationSchema[name]\n          // eslint-disable-next-line prefer-destructuring\n          error = validator.error\n        }\n      }\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: { value, error }\n    }))\n  }\n  return {\n    handleOnChange,\n    handlePhoneNumberChange,\n    handleOnSubmit,\n    validateOnBlur,\n    state,\n    setIsDirty,\n    setState,\n    disable\n  }\n}\n\nexport default useForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}